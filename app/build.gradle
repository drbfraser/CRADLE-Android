apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'


// Initialize the keystore credentials from the keystore.properties file
def filename = "keystore.properties"
def keystoreProperties = new Properties()

// Substitute with template if no configuration exists
if (!rootProject.file(filename).exists()) {
    filename += ".template"
}
keystoreProperties.load(new FileInputStream(rootProject.file(filename)))

android {

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            enableV3Signing true
        }
    }

//    dexOptions {
//        javaMaxHeapSize "4g"
//    }
//
    compileSdkVersion 34
    buildToolsVersion '33.0.1'

    defaultConfig {
        // Update this for new tags / new builds / new releases
        versionCode 49
        versionName "0.6.1-alpha"

        applicationId "com.cradleplatform.neptune"
        // Android 5
        minSdkVersion 24
        targetSdkVersion 34
        // Set the base name for the compiled APKs.
        project.ext.set("archivesBaseName", "CRADLE");

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // testBuildType "release"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                // Export the Room database schema for use in testing
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        ndk {
            // TensorFlow Lite: select only the ABI's we (likely) need
            // x86 just for emulator
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64', 'x86'
        }
    }

    buildTypes {
        debug {
            versionNameSuffix ".debug"
        }
        release {
            signingConfig signingConfigs.release

            // Use R8 for minification to reduce the app size. See the link for details:
            // https://developer.android.com/studio/build/shrink-code
            //
            // Note that this may cause problems between debug builds (i.e., builds run directly
            // from Android Studio using the standard app configuration or ./gradlew installDebug)
            // and release builds (i.e., builds ready for Google Play Store distribution), because
            // unused methods are being removed.
            // * Sometimes, these unused methods are actually being used (e.g, some JNI call or a
            //   call via reflection), but R8 removes them anyway. This can result in errors
            //   appearing on release builds but not on debug builds. Fixing this usually involves
            //   putting a rule in our proguard-rules.pro file.
            // * Generally when adding new libraries, if the library is well-configured, then they
            //   will include any relevant R8 rules for us (e.g., for OkHttp, it's included in the
            //   library JAR and we don't do anything: https://square.github.io/okhttp/r8_proguard/)
            //
            // Before releasing a build, the release build must be tested thoroughly for defects;
            // testing on a debug build isn't sufficient.
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        // https://developer.android.com/training/data-storage/room/
        // migrating-db-versions#export-schema
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    namespace 'com.cradleplatform.neptune'
    androidResources {
        noCompress 'tflite'
    }
    lint {
        textOutput file('stdout')
        textReport true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.google.android.play:core-ktx:1.8.1"

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation "androidx.security:security-crypto:1.1.0-alpha02"

    def camerax_version = "1.1.0-alpha04"
    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation "androidx.paging:paging-runtime-ktx:3.2.1"
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.activity:activity-ktx:1.8.0'
    implementation 'androidx.fragment:fragment-ktx:1.6.1'
    def androidx_lifecycle_version = '2.6.2'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.startup:startup-runtime:1.1.1"
    implementation "androidx.work:work-runtime-ktx:2.8.1"
    def room_version = "2.6.0"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    def kotlinx_coroutines_version = '1.7.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    def nav_version = "2.7.4"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.github.PhilJay:MPAndroidChart:3.1.0'

    implementation 'com.github.MikeOrtiz:TouchImageView:3.0.1'
    implementation 'com.loopj.android:android-async-http:1.4.11'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-work:$hilt_jetpack_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hilt_jetpack_version"

    def jackson_version = "2.12.3"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"

    def okhttp_version = "4.12.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // Time: Backport of Java 8's interfaces for Android
    // https://github.com/JakeWharton/ThreeTenABP
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.1'

    // TensorFlow (for OCR of CRADLE screen)
    // implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
    implementation 'org.tensorflow:tensorflow-lite:2.4.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.2.0-rc2'

    implementation 'com.google.firebase:firebase-analytics:18.0.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.4.1'
    implementation 'com.google.firebase:firebase-perf:19.1.1'
    implementation 'com.google.firebase:firebase-storage:19.2.2'

    // Testing
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.5'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation "androidx.room:room-testing:$room_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"
    // junit 5 unit testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    // JSON library for testing
    //   The actual one is baked into the Android SDK so it fails if we try to test it
    //   Note: There is a reason for why Google decided to rewrite org.json: The licensing for
    //   org.json is not considered free (it has the don't-use-for-evil clause).
    testImplementation "org.json:json:20200518"
    testImplementation 'io.mockk:mockk:1.13.8'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // https://github.com/android/testing-samples/tree/master/ui/espresso/IdlingResourceSample
    implementation 'androidx.test.espresso:espresso-idling-resource:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation "io.mockk:mockk-android:1.11.0"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    detekt "io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version"
    detekt "io.gitlab.arturbosch.detekt:detekt-cli:$detekt_version"
    // Gson library, used in model: FormTemplate.
    implementation 'com.google.code.gson:gson:2.8.2'
}

kotlin {
    jvmToolchain(17)
}

kapt {
    correctErrorTypes true
}
hilt {
    enableAggregatingTask = true
}