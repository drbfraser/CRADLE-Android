apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'


// Initialize the keystore credentials from the keystore.properties file
def filename = "keystore.properties"
def keystoreProperties = new Properties()

// Substitute with template if no configuration exists
if (!rootProject.file(filename).exists()) {
    filename += ".template"
}
keystoreProperties.load(new FileInputStream(rootProject.file(filename)))

android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    compileSdkVersion 29
    defaultConfig {
        // Update this every build
        versionCode 18
        versionName "Beta 2.0"
        multiDexEnabled true
        applicationId "com.cradleVSA.neptune"
        minSdkVersion 17    // Android 4.2
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        // Blur-Effect library
        renderscriptTargetApi 24
        renderscriptSupportModeEnabled true

        signingConfig signingConfigs.release

        javaCompileOptions {
            annotationProcessorOptions {
                // Export the Room database schema for use in testing
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        dataBinding = true
    }

    buildToolsVersion = '29.0.3'

    sourceSets {
        // Adds exported schema location as test app assets.
        // https://developer.android.com/training/data-storage/room/
        // migrating-db-versions#export-schema
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    //ui test
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.android.support:multidex:1.0.3'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_jetpack_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hilt_jetpack_version"


    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Time: Backport of Java 8's interfaces for Android
    // https://github.com/JakeWharton/ThreeTenABP
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.4'

    // GSON
    implementation 'com.google.code.gson:gson:2.8.6'

    // Preferences
    implementation 'androidx.preference:preference-ktx:1.1.1'

    // Material Design
    implementation 'com.google.android.material:material:1.2.1'

    // TensorFlow (for OCR of CRADLE screen)
    // implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
    implementation 'org.tensorflow:tensorflow-lite:1.14.0'

    // Blur
    implementation 'com.wonderkiln:blurkit:1.0.0'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // junit 5 unit testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    // JSON library for testing
    //   The actual one is baked into the Android SDK so it fails if we try to test it
    testImplementation "org.json:json:20200518"

    // A different version of this library for testing. The one used for the actual
    // application must be initialized before it can be used which we can't do when
    // testing hence this other version.
    testImplementation 'org.threeten:threetenbp:1.4.4'

    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:3.5.13'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:3.5.13'

    testImplementation "io.mockk:mockk:1.10.2"

    // Kotlin version of mockito
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    implementation 'com.google.firebase:firebase-analytics:17.6.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-perf:19.0.9'
    implementation 'com.google.firebase:firebase-storage:19.2.0'

    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'

    //room database
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    androidTestImplementation "androidx.room:room-testing:2.2.5"

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-beta01"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'

    def nav_version = "2.3.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    detekt "io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version"
    detekt("io.gitlab.arturbosch.detekt:detekt-cli:$detekt_version")
}

// TensorFlow Lite: select only the ABI's we (likely) need
android {
    defaultConfig {
        ndk {
            // x86 just for emulator
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64', 'x86'
        }
    }
}
repositories {
    mavenCentral()
}
